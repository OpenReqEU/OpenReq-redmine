import plotly.plotly as pyimport plotly.graph_objs as gofrom plotly.offline import plotimport osdef getNWordsTopics(n, driedTopics):    words_string_list = []    for _, words_lists in driedTopics.iteritems():        words_string = ''        iteration = 1        for word_list in words_lists:            if len(word_list) > 0:                if iteration < n:                    words_string += word_list[0] + ','                else:                    words_string += word_list[0]                if iteration == n:                    break                iteration += 1        words_string_list.append(words_string)    return words_string_listdef barCharsTopicDoc(friquencyDoc, dried_topics, doc_string, n_words_topics):    data = []    #for topic_index in driedTopics:    bar_dict = {}    bar_dict['x'] = range(len(dried_topics))    bar_dict['y'] = friquencyDoc    bar_dict['text'] = getNWordsTopics(n_words_topics, dried_topics)    trace = go.Bar(bar_dict)    data.append(trace)    fig = go.Figure(data=data)    if not os.path.exists('./data/output/Document_tagged/'):        os.makedirs('./data/output/Document_tagged/')    plot(fig, filename='./data/output/Document_tagged/'+doc_string + '.html', auto_open=False)def barCharsTopicDocs(friquencyDoc, dried_topics, doc_string):    data = []    #for topic_index in driedTopics:    bar_dict = {}    bar_dict['x'] = range(len(dried_topics))    bar_dict['y'] = friquencyDoc    #bar_dict['text'] = getNWordsTopics(n_words_topics, driedTopics)    trace = go.Bar(bar_dict)    data.append(trace)    fig = go.Figure(data=data)    if not os.path.exists('./data/output/Document_tagged/'):        os.makedirs('./data/output/Document_tagged/')    plot(fig, filename='./data/output/Document_tagged/'+doc_string + '.html', auto_open=False)